<!-- lightningStylesheets = true to enable the slds classes -->
<apex:page lightningStylesheets="true">
    <apex:slds/>
    <!-- HTML Code -->
    <div class="slds-scope">
        <div class="slds-p-around_small">
            <label>Enter Message to Publish</label>
            <input type="text" class="slds-input" id="messageField"/>
            <div class="slds-p-top_small slds-p-top_small">
                <button class="slds-button slds-button_neutral" onclick="publishHandler()">Publish</button>
                <button class="slds-button slds-button_neutral" onclick="subscribehHandler()">Subscribe</button>
                <button class="slds-button slds-button_neutral" onclick="unsubscribeHandler()">Unsubscribe</button>
            </div>

            <p>Message Received</p>
            <!-- to print received message -->
            <div id="receivedMessage"></div>
        </div>
    </div>
    <!-- JS -->
    <script>
        // refrencing the message channel through the name which is "SampleMessageChannel__c"
        let SampleChannel = "{!$MessageChannel.SampleMessageChannel__c}"

        subscription

        // publishing the message
        function publishHandler(){

            // getting input value
            let data = document.getElementById("messageField").value
            const message ={
                lmsData :{
                    value:data
                }
            }
            // sforce.one.publish(refrenceOfChannel,payload)
            //sforce=object & payload=message
            sforce.one.publish(SampleChannel,message)
        }

        function subscribehHandler(){
            //check if user repeadtly subscribes the already subscribed data
            if(!subscription){            
            // sforce.one.subscribe(refrenceOfChannel,listener,subscribeOption)
            subscription = sforce.one.subscribe(SampleChannel,msgHandler,{scope:"APPLICATION"})
            }
        }

        //message listener
        function msgHandler(message){
            let receivedMessage = document.getElementById("receivedMessage")
            //if there is a message then add innerHTML to the tag which we found by id above
            receivedMessage.innerHTML = message && message.lmsData ? message.lmsData.value : "No Message Published/Sent"
        }

        //to stop subscription
        function unsubscribeHandler(){
            //if subscription exists then only unsubscribe
            if(!subscription){ 
                sforce.one.unsubscribe(subscription)
                subscription = null
            }
        }
    </script>
</apex:page>